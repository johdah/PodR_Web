{# src/Dahlberg/PodrBundle/Resources/views/Playlist/details.html.twig #}
{% extends '::base.html.twig' %}

{% block title %}{{ parent() }} | Playlists{% endblock %}

{% block headstylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/dahlbergpodr/css/vendor/jquery/ui-lightness/jquery-ui-1.10.4.custom.min.css') }}" type="text/css" media="all"/>
    {{ parent() }}
{% endblock %}

{% block bodyjavascripts %}
    {{ parent() }}
    {% javascripts '@DahlbergPodrBundle/Resources/public/js/vendor/jquery/jquery-ui-1.10.4.custom.min.js' %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}

    <script>
        (function( $ ) {
            $.widget( "custom.combobox", {
                _create: function() {
                    this.wrapper = $( "<span>" )
                            .addClass( "custom-combobox" )
                            .insertAfter( this.element );

                    this.element.hide();
                    this._createAutocomplete();
                    this._createShowAllButton();
                },

                _createAutocomplete: function() {
                    var selected = this.element.children( ":selected" ),
                            value = selected.val() ? selected.text() : "";

                    this.input = $( "<input>" )
                            .appendTo( this.wrapper )
                            .val( value )
                            .attr( "title", "" )
                            .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
                            .autocomplete({
                                delay: 0,
                                minLength: 0,
                                source: $.proxy( this, "_source" )
                            })
                            .tooltip({
                                tooltipClass: "ui-state-highlight"
                            });

                    this._on( this.input, {
                        autocompleteselect: function( event, ui ) {
                            ui.item.option.selected = true;
                            this._trigger( "select", event, {
                                item: ui.item.option
                            });
                        },

                        autocompletechange: "_removeIfInvalid"
                    });
                },

                _createShowAllButton: function() {
                    var input = this.input,
                            wasOpen = false;

                    $( "<a>" )
                            .attr( "tabIndex", -1 )
                            .attr( "title", "Show All Items" )
                            .tooltip()
                            .appendTo( this.wrapper )
                            .button({
                                icons: {
                                    primary: "ui-icon-triangle-1-s"
                                },
                                text: false
                            })
                            .removeClass( "ui-corner-all" )
                            .addClass( "custom-combobox-toggle ui-corner-right" )
                            .mousedown(function() {
                                wasOpen = input.autocomplete( "widget" ).is( ":visible" );
                            })
                            .click(function() {
                                input.focus();

                                // Close if already visible
                                if ( wasOpen ) {
                                    return;
                                }

                                // Pass empty string as value to search for, displaying all results
                                input.autocomplete( "search", "" );
                            });
                },

                _source: function( request, response ) {
                    var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
                    response( this.element.children( "option" ).map(function() {
                        var text = $( this ).text();
                        if ( this.value && ( !request.term || matcher.test(text) ) )
                            return {
                                label: text,
                                value: text,
                                option: this
                            };
                    }) );
                },

                _removeIfInvalid: function( event, ui ) {

                    // Selected an item, nothing to do
                    if ( ui.item ) {
                        return;
                    }

                    // Search for a match (case-insensitive)
                    var value = this.input.val(),
                            valueLowerCase = value.toLowerCase(),
                            valid = false;
                    this.element.children( "option" ).each(function() {
                        if ( $( this ).text().toLowerCase() === valueLowerCase ) {
                            this.selected = valid = true;
                            return false;
                        }
                    });

                    // Found a match, nothing to do
                    if ( valid ) {
                        return;
                    }

                    // Remove invalid value
                    this.input
                            .val( "" )
                            .attr( "title", value + " didn't match any item" )
                            .tooltip( "open" );
                    this.element.val( "" );
                    this._delay(function() {
                        this.input.tooltip( "close" ).attr( "title", "" );
                    }, 2500 );
                    this.input.data( "ui-autocomplete" ).term = "";
                },

                _destroy: function() {
                    this.wrapper.remove();
                    this.element.show();
                }
            });
        })( jQuery );

        $(function() {
            $( "#form_podcasts" ).combobox();
            $( "#toggle" ).click(function() {
                $( "#form_podcasts" ).toggle();
            });
        });
    </script>
{% endblock %}

{% block body %}
    <div class="row">
        <nav class="breadcrumbs">
            <a href="{{ path('root') }}">Home</a>
            <a href="{{ path('playlist_index') }}">Playlists</a>
            <a class="current">{{ playlist.getTitle }}</a>
        </nav>
    </div>
    <div class="row playlist-details">
        <dl class="tabs" data-tab>
            <dd class="active"><a href="#unarchived">Unarchived</a></dd>
            <dd><a href="#podcasts">Podcasts</a></dd>
        </dl>
        <div class="tabs-content">
            <div class="content active" id="unarchived">
                {% if playlist %}
                <h1><small id="playlist_id">#{{ playlist.getId }} </small> {{ playlist.getTitle }}</h1>

                <h2>Episodes</h2>
                {% if playlist.getPlaylistPodcasts %}
                    <table class="podcast-table">
                        <thead>
                        <tr>
                            <th width="200"></th>
                            <th>Title</th>
                            <th width="130">Published Date</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for episode in episodes %}
                            <tr>
                                <td class="episode-image">
                                    {% if episode.getItunesImage %}
                                        <a class="th round" href="{{ episode.getItunesImage }}">
                                            <img src="{{ episode.getItunesImage }}">
                                        </a>
                                    {% elseif episode.getPodcast.getItunesImage %}
                                        <a class="th round" href="{{ episode.getPodcast.getItunesImage }}">
                                            <img src="{{ episode.getPodcast.getItunesImage }}">
                                        </a>
                                    {% endif %}
                                </td>
                                <td class="episode-info">
                                    <div class="episode-title"><h4><a href="{{ path('episode_details', {'id': episode.getId}) }}">{{ episode.getTitle[:55] }}</a></h4></div>
                                    <div class="podcast-title"><h5><a href="{{ path('podcast_details', {'id': episode.getPodcast.getId}) }}">{{ episode.getPodcast.getTitle[:80] }}</a></h5></div>
                                    <div class="episode-description"><p>{% if episode.getItunesSubtitle %}{{ episode.getItunesSubtitle[:240] }}
                                            {% elseif episode.getItunesSummary %}{{ episode.getItunesSummary[:240] }}
                                            {% else %}-{% endif %}</p></div>
                                </td>
                                <td>{% if episode.getPublishedDate %}{{ episode.getPublishedDate|date('Y-m-d') }}{% else %}-{% endif %}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% else %}
                    <p>No podcasts found.</p>
                {% endif %}

                {% else %}
                    <h1>Playlist</h1>
                    <p>The selected playlist doesn't exist.</p>
                {% endif %}
                <a href="{{ path('playlist_edit', {'id': playlist.getId}) }}" class="button radius">Edit playlist</a>
            </div>
            <div class="content" id="podcasts">
                <h2>Podcasts</h2>
                {% if playlist.getPlaylistPodcasts %}
                    <table class="podcast-table">
                        <thead>
                        <tr>
                            <th>Title</th>
                            <th width="100"></th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for podcast in podcasts %}
                            <tr>
                                <td><a href="{{ path('podcast_details', {'id': podcast.getId}) }}">{{ podcast.getTitle }}</a></td>
                                <td><a href="{{ path('playlist_remove_podcast', {'playlistId': playlist.getId, 'podcastId': podcast.getId}) }}"><span class="label round secondary right">X</span></a></td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% else %}
                    <p>No podcasts found.</p>
                {% endif %}

                <h4>Add podcasts</h4>
                {{ form_start(form) }}
                    <div class="ui-widget">
                        {{ form_row(form.podcasts) }}
                    </div>
                    {{ form_errors(form) }}
                    {% if formSuccess %}
                        <div data-alert class="alert-box success radius">
                            {{ formSuccess }}
                        </div>
                    {% endif %}
                    <div>
                        {{ form_widget(form.add) }}
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endblock %}